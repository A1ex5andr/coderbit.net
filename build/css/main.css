@import url(http://fonts.googleapis.com/css?family=Kaushan+Script);
@import url(http://fonts.googleapis.com/css?family=Montserrat:700);
@import url(http://fonts.googleapis.com/css?family=Ubuntu:400,700&subset=cyrillic-ext,latin);
@import url(http://fonts.googleapis.com/css?family=Play:400,700&subset=latin,cyrillic);
@import url(http://fonts.googleapis.com/css?family=Roboto:400,900,700&subset=latin,cyrillic);
/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

.js .nav-collapse {
  clip: rect(0 0 0 0);
  max-height: 0;
  position: absolute;
  display: block;
  overflow: hidden;
  zoom: 1; }

.nav-collapse.opened {
  max-height: 9999px; }

.disable-pointer-events {
  pointer-events: none !important; }

.nav-toggle {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.fixed {
  position: fixed;
  width: 100%;
  top: 0;
  left: 0; }

.nav-collapse {
  list-style: none;
  width: 100%;
  float: left;
  box-sizing: border-box; }
  .nav-collapse .fa {
    font-size: 18px;
    padding-right: 10px; }
  .nav-collapse * {
    box-sizing: border-box; }
  .nav-collapse ul {
    list-style: none;
    width: 100%;
    float: left;
    margin: 0;
    padding: 0;
    width: 100%;
    display: block;
    list-style: none;
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    text-size-adjust: 100%;
    font: normal 100%/1.4 sans-serif; }
  .nav-collapse li {
    float: left;
    width: 100%;
    display: block; }
  .nav-collapse a {
    color: #171717;
    text-decoration: none;
    width: 100%;
    padding: 0.7em 1em;
    float: left;
    font-family: 'Play', sans-serif;
    font-size: 20px; }
  .nav-collapse ul ul a {
    background: #ca3716; }

/* media queries */
@media screen and (max-width: 767px) {
  .nav-collapse {
    border-top: 1px solid #d2d2d2;
    border-bottom: 1px solid #d2d2d2; }
    .nav-collapse a {
      background: #e6e6e6;
      border-bottom: 1px solid #d2d2d2;
      background: #F3F3F3; }
  .nav-collapse ul ul li {
    box-sizing: border-box;
    width: 33.33333%;
    float: left;
    text-align: center; } }

@media screen and (min-width: 768px) {
  .js .nav-collapse {
    position: relative; }
    .js .nav-collapse.closed {
      max-height: none; }
  .nav-toggle {
    display: none; }
  .nav-collapse {
    overflow: hidden;
    float: right;
    width: auto; }
    .nav-collapse .fa {
      margin-left: -20px;
      visibility: hidden; }
    .nav-collapse .inCart {
      background: #37302a; }
    .nav-collapse li {
      min-width: 100px;
      width: auto; }
      .nav-collapse lihover {
        background: rgba(228, 1, 0, 0.22); }
    .nav-collapse a {
      margin: 0;
      text-align: center; }
      .nav-collapse a:hover {
        background: #FFF;
        background: rgba(255, 255, 255, 0.55); } }

/* ------------------------------------------
  NAV TOGGLE STYLES
--------------------------------------------- */
@font-face {
  font-family: "responsivenav";
  src: url("../icons/responsivenav.eot");
  src: url("../icons/responsivenav.eot?#iefix") format("embedded-opentype"), url("../icons/responsivenav.ttf") format("truetype"), url("../icons/responsivenav.woff") format("woff"), url("../icons/responsivenav.svg#responsivenav") format("svg");
  font-weight: normal;
  font-style: normal; }

.nav-toggle {
  position: fixed;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  text-indent: -999px;
  position: relative;
  overflow: hidden;
  width: 70px;
  height: 55px;
  float: right; }
  .nav-toggle:before {
    color: #171717;
    /* Edit this to change the icon color */
    font-family: "responsivenav", sans-serif;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    font-size: 28px;
    text-transform: none;
    position: absolute;
    content: "≡";
    text-indent: 0;
    text-align: center;
    line-height: 55px;
    speak: none;
    width: 100%;
    top: 0;
    left: 0; }
  .nav-toggle.active::before {
    font-size: 24px;
    content: "x"; }

/**
 * fullPage 2.1.9
 * https://github.com/alvarotrigo/fullPage.js
 * MIT licensed
 *
 * Copyright (C) 2013 alvarotrigo.com - A project by Alvaro Trigo
 */
html, body {
  margin: 0;
  padding: 0;
  /*Avoid flicker on slides transitions for mobile phones #336 */
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

#superContainer {
  height: 100%;
  position: relative;
  /* Touch detection for Windows 8 */
  -ms-touch-action: none;
  /* IE 11 on Windows Phone 8.1*/
  touch-action: none; }

.fp-section {
  position: relative;
  /* Safari<=5 Android<=3 */
  /* <=28 */
  box-sizing: border-box; }

.fp-slide {
  float: left; }

.fp-slide, .fp-slidesContainer {
  height: 100%;
  display: block; }

.fp-slides {
  z-index: 1;
  height: 100%;
  overflow: hidden;
  position: relative;
  -webkit-transition: all 0.3s ease-out;
  /* Safari<=6 Android<=4.3 */
  transition: all 0.3s ease-out; }

.fp-section.fp-table, .fp-slide.fp-table {
  display: table;
  width: 100%; }

.fp-tableCell {
  display: table-cell;
  vertical-align: middle;
  width: 100%;
  height: 100%; }

.fp-slidesContainer {
  float: left;
  position: relative; }

.fp-controlArrow {
  position: absolute;
  z-index: 4;
  top: 45%;
  cursor: pointer;
  width: 0;
  height: 0;
  border-style: solid;
  margin-top: -38px; }

.web .fp-controlArrow.fp-prev {
  border-color: transparent #111111 transparent transparent; }
.web .fp-controlArrow.fp-next {
  border-color: transparent transparent transparent #111111; }

.fp-controlArrow.fp-prev {
  left: 15px;
  width: 0;
  border-width: 38.5px 34px 38.5px 0;
  border-color: transparent #176765 transparent transparent; }

.fp-controlArrow.fp-next {
  right: 15px;
  border-width: 38.5px 0 38.5px 34px;
  border-color: transparent transparent transparent #176765; }

@media all and (max-width: 767px) {
  .fp-controlArrow.fp-next {
    right: 10px;
    border-width: 33.5px 0 33.5px 27px; }
  .fp-controlArrow.fp-prev {
    right: 10px;
    border-width: 33.5px 27px 33.5px 0; } }

.fp-scrollable {
  overflow: scroll; }

.fp-easing {
  -webkit-transition: all 0.7s ease-out;
  /* Safari<=6 Android<=4.3 */
  transition: all 0.7s ease-out; }

#fp-nav {
  position: fixed;
  z-index: 100;
  margin-top: -32px;
  bottom: 50px;
  opacity: 1; }

#fp-nav.right {
  right: 17px; }

#fp-nav.left {
  left: 17px; }

.fp-slidesNav {
  position: absolute;
  z-index: 4;
  left: 50%;
  opacity: 1; }

.fp-slidesNav.bottom {
  bottom: 17px; }

.fp-slidesNav.top {
  top: 17px; }

#fp-nav ul, .fp-slidesNav ul {
  margin: 0;
  padding: 0; }

#fp-nav li, .fp-slidesNav li {
  display: block;
  width: 14px;
  height: 13px;
  margin: 7px;
  position: relative; }

.fp-slidesNav li {
  display: inline-block; }

#fp-nav li a, .fp-slidesNav li a {
  display: block;
  position: relative;
  z-index: 1;
  width: 100%;
  height: 100%;
  cursor: pointer;
  text-decoration: none; }

#fp-nav li .active span, .fp-slidesNav .active span {
  background: #333; }

#fp-nav span, .fp-slidesNav span {
  top: 2px;
  left: 2px;
  width: 8px;
  height: 8px;
  border: 1px solid #000;
  background: rgba(0, 0, 0, 0);
  border-radius: 50%;
  position: absolute;
  z-index: 1; }

.fp-tooltip {
  position: absolute;
  top: -2px;
  color: #fff;
  font-size: 14px;
  font-family: arial, helvetica, sans-serif;
  white-space: nowrap;
  max-width: 220px; }

.fp-tooltip.right {
  right: 20px; }

.fp-tooltip.left {
  left: 20px; }

pre {
  font-size: 0.9em;
  overflow: auto;
  background: #fff;
  border: 0;
  margin-bottom: 1.8em;
  padding: 1em; }

.blogpost {
  /* page footer */
  /* article */
  /* archive */ }
  .blogpost .content-wrap {
    width: 40em;
    margin: 0 auto; }
  .blogpost p {
    margin-bottom: 1.52em; }
  .blogpost h1 {
    font-size: 1em;
    margin-bottom: 1em; }
  .blogpost h2 {
    font-size: 1.2em;
    font-weight: 400;
    line-height: 1.43;
    margin-bottom: 1.35em; }
  .blogpost h3 {
    font-style: italic;
    text-align: center;
    font-weight: 400;
    font-size: 1.4em;
    margin-top: 1.8em;
    margin-bottom: 0.8em; }
  .blogpost ol, .blogpost ul {
    margin: 0 1.4em 1.4em 4em; }
  .blogpost li {
    margin-bottom: 0.5em; }
  .blogpost blockquote {
    margin: 1.2em 3em;
    padding-left: 1em;
    font-style: italic; }
  .blogpost hr {
    border: 0;
    border-top: 1px dashed #d2d2d2;
    height: 0;
    margin: 1.6em 0; }
  .blogpost footer {
    margin: 3em 0; }
  .blogpost footer .nav {
    text-align: center;
    margin-top: 5em;
    margin-bottom: 3.5em; }
  .blogpost footer .nav a {
    padding: 0 0.5em;
    font-size: 1.2em;
    text-decoration: none; }
  .blogpost footer .about {
    border-top: 1px dashed #d2d2d2;
    padding: 2.2em 3em;
    font-size: 0.7em;
    -webkit-column-count: 3;
    -moz-column-count: 3;
    -ms-column-count: 3;
    column-count: 3;
    -webkit-column-gap: 2em;
    -moz-column-gap: 2em;
    -ms-column-gap: 2em;
    column-gap: 2em; }
  .blogpost footer .copy {
    text-align: center;
    font-size: 0.7em;
    font-style: italic;
    margin-top: 1em; }
  .blogpost footer .copy, .blogpost footer .copy a {
    color: #8e8e8e; }
  .blogpost .article {
    margin: 3em 0 4em; }
  .blogpost .article header {
    border-top: 1px dashed #d2d2d2; }
  .blogpost .article header h2 {
    font-weight: 400;
    margin: 0.8em 0;
    font-size: 1.4em;
    text-align: right; }
  .blogpost .article header h2 a {
    text-decoration: none; }
  .blogpost .article header .date {
    text-align: right;
    font-size: 0.8em;
    margin-top: -0.7em; }
  .blogpost .article header .date span {
    background-color: #f8f8f8;
    padding: 0 0.7em; }
  .blogpost .article.intro .content {
    text-indent: 20px;
    text-align: justify; }
  .blogpost .article.intro .content p {
    display: inline; }
  .blogpost .article.intro .content .more {
    text-decoration: underline;
    font-weight: 700;
    padding-left: 0.3em; }
  .blogpost .article .content img {
    display: block;
    width: 100%; }
  .blogpost .more, .blogpost .date {
    font-family: 'Play', sans-serif;
    font-variant: small-caps;
    text-transform: lowercase;
    font-weight: 400;
    text-rendering: auto;
    letter-spacing: 1px; }
  .blogpost .archive {
    width: 32em;
    margin: 5em auto 6em;
    padding-left: 2em; }
  .blogpost .archive h2 {
    font-size: 2em;
    margin: 0;
    margin-left: 6.1em;
    margin-bottom: 0.5em;
    font-style: italic; }
  .blogpost .archive a, .blogpost .archive span {
    display: block;
    float: left;
    margin-bottom: -1px;
    text-decoration: none; }
  .blogpost .archive li:not(:last-child) {
    border-bottom: 1px solid #d2d2d2;
    margin-bottom: -1px; }
  .blogpost .archive a.last, .blogpost .archive span.last {
    border: 0;
    margin-bottom: 0; }
  .blogpost .archive a {
    width: 21em;
    text-indent: 1em;
    white-space: nowrap; }
  .blogpost .archive .year-label, .blogpost .archive .month-label {
    width: 4em;
    font-family: 'Merriweather', serif;
    font-variant: small-caps;
    text-transform: lowercase;
    font-weight: 400;
    text-rendering: auto;
    letter-spacing: 1px;
    text-align: center; }
  .blogpost .archive .month-label {
    width: 7em; }
  .blogpost .archive ul {
    list-style: none;
    margin: 0; }
  .blogpost .archive ul li {
    margin: 0; }

/* code styling */
code {
  font-family: 'Anonymous Pro', monospace;
  font-size: 0.85em;
  color: #000; }

pre code {
  display: block;
  line-height: 1.1; }

p code {
  padding: 0.1em 0.3em 0.2em;
  border-radius: 0.3em;
  position: relative;
  background: #D2D2D2;
  white-space: nowrap; }

/* syntax hl stuff */
code.lang-markdown {
  color: #424242; }

code.lang-markdown .header, code.lang-markdown .strong {
  font-weight: bold; }

code.lang-markdown .emphasis {
  font-style: italic; }

code.lang-markdown .horizontal_rule, code.lang-markdown .link_label, code.lang-markdown .code, code.lang-markdown .header, code.lang-markdown .link_url {
  color: #555; }

code.lang-markdown .blockquote, code.lang-markdown .bullet {
  color: #bbb; }

/* Tomorrow Theme */
/* http://jmblog.github.com/color-themes-for-google-code-highlightjs */
/* Original theme - https://github.com/chriskempson/tomorrow-theme */
/* http://jmblog.github.com/color-themes-for-google-code-highlightjs */
.tomorrow-comment, pre .comment, pre .title {
  color: #8e908c; }

.tomorrow-red, pre .variable, pre .attribute, pre .tag, pre .regexp, pre .ruby .constant, pre .xml .tag .title, pre .xml .pi, pre .xml .doctype, pre .html .doctype, pre .css .id, pre .css .class, pre .css .pseudo {
  color: #c82829; }

.tomorrow-orange, pre .number, pre .preprocessor, pre .built_in, pre .literal, pre .params, pre .constant {
  color: #f5871f; }

.tomorrow-yellow, pre .class, pre .ruby .class .title, pre .css .rules .attribute {
  color: #eab700; }

.tomorrow-green, pre .string, pre .value, pre .inheritance, pre .header, pre .ruby .symbol, pre .xml .cdata {
  color: #718c00; }

.tomorrow-aqua, pre .css .hexcolor {
  color: #3e999f; }

.tomorrow-blue, pre .function, pre .python .decorator, pre .python .title, pre .ruby .function .title, pre .ruby .title .keyword, pre .perl .sub, pre .javascript .title, pre .coffeescript .title {
  color: #4271ae; }

.tomorrow-purple, pre .keyword, pre .javascript .function {
  color: #8959a8; }

/* media queries */
@media all and (min-width: 992px) {
  .blogpost .content-wrap {
    width: 50em; } }

@media (max-width: 767px) {
  .blogpost .content-wrap {
    width: auto;
    padding: 0 1em; }
  .blogpost .article {
    margin: 1em 0 2.5em; }
  .blogpost .archive {
    width: 80%;
    margin: 0 auto; }
  .blogpost .archive * {
    float: none !important;
    line-height: 1.6 !important;
    width: auto !important;
    height: auto !important;
    text-align: left !important;
    border: 0 !important;
    margin: 0 !important; }
  .blogpost footer .nav {
    margin: 1em 0; }
  .blogpost footer .about {
    padding: 0;
    font-size: 0.9em;
    padding-top: 1.6em;
    -webkit-column-count: 1;
    -moz-column-count: 1;
    -ms-column-count: 1;
    column-count: 1; }
  .blogpost footer .about p {
    margin-bottom: 1em; } }

/* pre loader */
.preLoader {
  padding: 1em;
  color: #fff;
  width: 100%;
  margin: 0 auto;
  position: absolute;
  left: 0;
  right: 0;
  height: 100%;
  box-sizing: border-box;
  text-align: right; }
  .preLoader h1 {
    margin: 1em auto;
    font-weight: lighter;
    width: 70%;
    padding: 0 0 0.6em 0;
    position: relative; }
  .preLoader ul {
    position: absolute;
    left: 30%;
    top: 70%;
    -webkit-transform: rotate(45deg) translate(-50%, -50%);
        -ms-transform: rotate(45deg) translate(-50%, -50%);
            transform: rotate(45deg) translate(-50%, -50%); }
  .preLoader li {
    list-style-type: none;
    position: absolute;
    top: 0px;
    left: 0px;
    width: 20px;
    height: 20px;
    background: #ec7013;
    border-radius: 50%;
    -webkit-animation-direction: reverse;
            animation-direction: reverse; }
  .preLoader .noAnimation {
    -webkit-animation: none !important;
            animation: none !important; }
  .preLoader #a {
    -webkit-animation: a 700ms ease-in-out infinite;
            animation: a 700ms ease-in-out infinite;
    top: -40px;
    left: -40px; }
  .preLoader #b {
    -webkit-animation: b 700ms ease-in-out infinite;
            animation: b 700ms ease-in-out infinite;
    top: -40px;
    left: 0px; }
  .preLoader #c {
    -webkit-animation: c 700ms ease-in-out infinite;
            animation: c 700ms ease-in-out infinite;
    top: -40px;
    left: 40px; }
  .preLoader #d {
    -webkit-animation: d 700ms ease-in-out infinite;
            animation: d 700ms ease-in-out infinite;
    top: 0px;
    left: -40px; }
  .preLoader #e {
    -webkit-animation: e 700ms ease-in-out infinite;
            animation: e 700ms ease-in-out infinite;
    top: 0px;
    left: 0px; }
  .preLoader #f {
    -webkit-animation: f 700ms ease-in-out infinite;
            animation: f 700ms ease-in-out infinite;
    top: 0px;
    left: 40px; }
  .preLoader #g {
    -webkit-animation: g 700ms ease-in-out infinite;
            animation: g 700ms ease-in-out infinite;
    top: 40px;
    left: -40px; }
  .preLoader #h {
    -webkit-animation: h 700ms ease-in-out infinite;
            animation: h 700ms ease-in-out infinite;
    top: 40px;
    left: 0px; }
  .preLoader #i {
    -webkit-animation: i 700ms ease-in-out infinite;
            animation: i 700ms ease-in-out infinite;
    top: 40px;
    left: 40px; }

@-webkit-keyframes a {
  50% {
    top: 0px;
    left: -40px; }

  100% {
    top: 0px;
    left: -40px; } }

@keyframes a {
  50% {
    top: 0px;
    left: -40px; }

  100% {
    top: 0px;
    left: -40px; } }

@-webkit-keyframes b {
  50% {
    top: -40px;
    left: -40px; }

  100% {
    top: -40px;
    left: -40px; } }

@keyframes b {
  50% {
    top: -40px;
    left: -40px; }

  100% {
    top: -40px;
    left: -40px; } }

@-webkit-keyframes c {
  50% {
    top: -40px;
    left: 0px; }

  100% {
    top: -40px;
    left: 0px; } }

@keyframes c {
  50% {
    top: -40px;
    left: 0px; }

  100% {
    top: -40px;
    left: 0px; } }

@-webkit-keyframes d {
  50% {
    top: 40px;
    left: -40px; }

  100% {
    top: 40px;
    left: -40px; } }

@keyframes d {
  50% {
    top: 40px;
    left: -40px; }

  100% {
    top: 40px;
    left: -40px; } }

@-webkit-keyframes f {
  50% {
    top: -40px;
    left: 40px; }

  100% {
    top: -40px;
    left: 40px; } }

@keyframes f {
  50% {
    top: -40px;
    left: 40px; }

  100% {
    top: -40px;
    left: 40px; } }

@-webkit-keyframes g {
  50% {
    top: 40px;
    left: 0px; }

  100% {
    top: 40px;
    left: 0px; } }

@keyframes g {
  50% {
    top: 40px;
    left: 0px; }

  100% {
    top: 40px;
    left: 0px; } }

@-webkit-keyframes h {
  50% {
    top: 40px;
    left: 40px; }

  100% {
    top: 40px;
    left: 40px; } }

@keyframes h {
  50% {
    top: 40px;
    left: 40px; }

  100% {
    top: 40px;
    left: 40px; } }

@-webkit-keyframes i {
  50% {
    top: 0px;
    left: 40px; }

  100% {
    top: 0px;
    left: 40px; } }

@keyframes i {
  50% {
    top: 0px;
    left: 40px; }

  100% {
    top: 0px;
    left: 40px; } }

/*                    **
**   Default styles   **
**                    */
html, body, .enterAnimation {
  height: 100%; }

body {
  margin: 0;
  padding: 0;
  font-family: Lucida Sans Unicode, Lucida Grande, sans-serif;
  min-width: 320px;
  background-color: #f8f8f8;
  text-rendering: optimizeLegibility;
  color: #171717;
  overflow-x: hidden; }

a {
  color: #DD5F00;
  text-decoration: none;
  -webkit-transition: all ease 500ms;
          transition: all ease 500ms; }

li {
  list-style-type: square; }

h1, h2, h3 {
  font-family: 'Montserrat', sans-serif; }

textarea {
  resize: vertical; }

.row {
  clear: both;
  overflow: hidden; }

.hideme {
  opacity: 0; }

.pause {
  -webkit-animation-play-state: paused !important;
          animation-play-state: paused !important; }

.btn {
  font-size: 16px;
  color: #333;
  text-transform: uppercase;
  letter-spacing: 2px;
  padding: 10px 20px;
  border: 1px solid #333;
  background: #FFF;
  display: block;
  margin: 20px auto 0;
  outline: none;
  text-align: center; }
  .btn::before {
    content: '\2192';
    display: inline-block;
    margin-right: 10px; }

.container {
  box-sizing: border-box;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  position: relative;
  height: 100%; }

.container:after {
  content: " ";
  display: block;
  clear: both; }

.shadeIn {
  box-shadow: inset 0px -10px 0px 0px rgba(0, 0, 0, 0.65);
  width: 100%;
  height: 10px;
  position: absolute;
  bottom: 0;
  z-index: 5555; }

/* portfolio show work */
.imagePreLoader img {
  margin: 0 auto;
  display: block; }

/* *** INDEX PAGE *** */
#slideBlocks, .enterAnimation {
  display: none; }

/* top line in header: logo + menu*/
.top {
  background: rgba(255, 255, 255, 0.6);
  border-bottom: 1px solid #a36d6d;
  overflow: hidden;
  width: 100%;
  z-index: 7777; }
  .top a {
    color: #171717;
    font-weight: 800; }
    .top a:hover {
      color: inherit; }
  .top-logo {
    -webkit-transition: none;
            transition: none;
    float: left;
    font-family: 'Kaushan Script', cursive;
    padding-left: 10px;
    padding-top: 2px;
    font-size: 36px; }
    .top-logo:hover {
      color: inherit; }

.section .top {
  position: absolute;
  top: 0; }

/* VIEWPORT HEIGHT */
.slogan, .web, .skills, .about {
  height: 100%;
  overflow: hidden;
  min-height: 320px; }

/* slogan */
.slogan {
  background: url("../img/slogan.jpg") center no-repeat;
  background-size: cover;
  background-position-x: 50%; }
  .slogan-slide {
    position: absolute;
    bottom: 0;
    left: 0;
    padding: 10px; }
  .slogan h1, .slogan h2 {
    opacity: 0;
    font-family: 'Ubuntu', sans-serif;
    text-align: left;
    font-size: 20px;
    margin: 4px 0;
    color: #ffffff;
    position: relative;
    text-shadow: 1px 1px 1px #5F0000; }
  .slogan .slName {
    top: -2000px; }
  .slogan .slDev {
    right: -2000px; }
  .slogan .slDes {
    bottom: -2000px; }
  .slogan .slCode {
    left: -2000px; }
  .slogan .slWeb {
    right: -2000px; }

/* all sections except main 1st -.slogan */
.web h1, .skills h1, .about h1 {
  font-size: 38px;
  text-align: right;
  padding-right: 50px;
  letter-spacing: -2px;
  z-index: 20;
  position: relative; }
.web p, .web ul, .skills p, .skills ul, .about p, .about ul {
  padding: 0 50px;
  font-size: 1em;
  z-index: 20;
  position: relative; }
.web p, .skills p, .about p {
  text-align: justify; }

/* web  block */
.web a {
  color: #fff; }
  .web a:hover {
    color: #cfcfcf; }
.web-html {
  background: #FF4D11;
  background: -webkit-linear-gradient(#FF4D11, #911F03);
  background: linear-gradient(#FF4D11, #911F03); }
.web-css {
  background: #5db6ee;
  background: -webkit-linear-gradient(#5db6ee, #1778ee);
  background: linear-gradient(#5db6ee, #1778ee); }
.web-js {
  background: #ffb52e;
  background: -webkit-linear-gradient(#FFCA68, #B06600);
  background: linear-gradient(#FFCA68, #B06600); }
.web-blog {
  background: #44BF87;
  background: -webkit-linear-gradient(#44BF87, #005b23);
  background: linear-gradient(#44BF87, #005b23); }
.web-photoshop {
  background: #6AB2FD;
  background: -webkit-linear-gradient(#6AB2FD, #1D59B9);
  background: linear-gradient(#6AB2FD, #1D59B9); }
.web-illustrator {
  background: #dd7a14;
  background: -webkit-linear-gradient(#F17C16, #622525);
  background: linear-gradient(#F17C16, #622525); }
.web .example {
  display: none; }
.web .htmlLogo, .web .cssLogo, .web .jsLogo, .web .blogLogo, .web .photoshopLogo, .web .illustratorLogo, .web .photoshopLogo, .web .illustratorLogo {
  position: absolute;
  bottom: 8px;
  left: 10px;
  z-index: 10;
  width: 100px;
  height: 110px; }
.web .photoshopLogo, .web .illustratorLogo {
  bottom: -4px; }

/* skills overall*/
.skills {
  background-color: #FFF;
  background: -webkit-linear-gradient(#FFF, #bababa);
  background: linear-gradient(#FFF, #bababa); }
  .skills li {
    -webkit-transition: 1s ease-in-out;
            transition: 1s ease-in-out;
    position: relative;
    left: 1200px;
    opacity: 0; }

/* final section about*/
.about {
  background-color: #FFF770;
  background: -webkit-linear-gradient(#FFF770, #b59d12);
  background: linear-gradient(#FFF770, #b59d12); }

/* pop up */
.popUp {
  width: 100%;
  height: 100%;
  margin: 0 auto;
  position: absolute;
  top: 0;
  background: #002030;
  background: -webkit-linear-gradient(#002030, #004261);
  background: linear-gradient(#002030, #004261);
  z-index: 9999;
  overflow: hidden; }

.animateText {
  -webkit-transform: translate3d(0, 0, 0);
  visibility: hidden; }
  .animateText div {
    -webkit-font-smoothing: antialiased;
    -moz-font-smoothing: antialiased; }

/* portfolio */
.portfolio {
  text-align: center;
  overflow: hidden;
  margin-top: 30px;
  width: 100%; }
  .portfolio-bl {
    float: left;
    width: 100%;
    box-sizing: border-box;
    margin-bottom: 20px; }
  .portfolio-link {
    border: 1px solid #E9E9E9;
    overflow: hidden;
    display: block;
    background: #FFF;
    padding: 20px;
    max-width: 290px;
    margin: 0 auto;
    box-sizing: border-box; }
  .portfolio-thumb {
    max-width: 250px;
    width: 100%;
    display: block;
    margin: 0 auto 20px; }
  .portfolio-title {
    font-family: play;
    font-size: 26px;
    font-weight: 100;
    padding-top: 10px; }

.workShow {
  display: none;
  box-sizing: border-box;
  width: 100%;
  height: auto;
  margin: 0 auto;
  top: 0;
  background: #fff;
  z-index: 9999;
  overflow: hidden;
  overflow: hidden;
  padding: 20px;
  max-width: 400px;
  position: relative; }
  .workShow-image {
    display: none; }
  .workShow-text {
    text-align: justify;
    font-size: 16px; }
  .workShow .closeShow {
    position: absolute;
    right: 0;
    top: 0;
    width: 34px;
    height: 34px;
    background: #fb2b44;
    display: block;
    margin: 0;
    text-align: center;
    line-height: 34px;
    font-size: 20px;
    font-weight: 800;
    color: #fff;
    font-family: Arial;
    cursor: pointer; }

.showPopUp {
  display: none;
  width: 100%;
  height: 100%;
  background: rgba(17, 17, 17, 0.9);
  position: fixed;
  top: 0;
  z-index: 9999;
  overflow: auto;
  padding: 20px;
  box-sizing: border-box; }

.activeShow {
  display: block; }

/* sticky footer */
.wrapper {
  min-height: 100%;
  margin: 0 auto -38px; }

footer, .push {
  height: 37px; }

/* footer */
footer {
  border-top: 1px solid #CDCDCD;
  background: #EFEFEF;
  text-align: center;
  width: 100%; }
  footer h5 {
    margin: 10px; }

/* contact form */
.contactMe {
  padding: 20px 0;
  width: 90%;
  margin: 0 auto; }
  .contactMe input, .contactMe textarea {
    color: #626262;
    background: #FFF;
    font-family: "Open Sans", "Helvetica", "Arial";
    font-size: 1.2em;
    border: 1px solid #DDD;
    border-radius: 4px;
    box-sizing: border-box;
    width: 90%;
    margin: 10px auto 0;
    display: block;
    padding: 6px 10px;
    box-shadow: inset 0px 1px 4px #D1D1D1; }
    .contactMe input:focus, .contactMe textarea:focus {
      outline: 0;
      border: 1px solid #ff8420; }
  .contactMe textarea {
    min-height: 100px; }
  .contactMe .input-name, .contactMe .input-mail {
    margin: 10px auto 10px; }

@media (max-width: 320px) {
  .container {
    max-width: 100%;
    margin-left: auto;
    margin-right: auto; } }

@media (max-width: 767px) {
  .container {
    max-width: 100%;
    margin-left: auto;
    margin-right: auto; }
  .example {
    display: none !important; }
  footer h5 {
    font-size: 10px; } }

@media (min-width: 768px) {
  /* slogan */
  /* all slides general  */
  /* each block */
  /* skills overall*/
  /* portfolio */
  .container {
    max-width: 768px;
    margin-left: auto;
    margin-right: auto; }
  a:hover {
    color: #c22904; }
  .slogan-slide {
    bottom: 10%; }
  .slogan h1, .slogan h2 {
    font-size: 32px; }
  .web .container, .design .container, .skills .container, .about .container {
    padding-top: 60px; }
  .web h1, .design h1, .skills h1, .about h1 {
    font-size: 52px;
    padding: 0 70px; }
  .web p, .design p, .skills p, .about p {
    padding: 0 160px;
    font-size: 1.4em;
    line-height: 1.4em; }
  .web pre, .design pre, .skills pre, .about pre {
    border: 1px solid #989898;
    border-radius: 4px; }
  .web .example {
    position: relative;
    width: 400px;
    margin: 0 auto;
    height: 100%;
    -webkit-transform-style: preserve-3d;
            transform-style: preserve-3d; }
    .web .example pre, .web .example svg:not(:root) {
      overflow: hidden;
      padding: 10px;
      position: relative;
      top: 20%;
      -webkit-transform: translateY(-60%);
          -ms-transform: translateY(-60%);
              transform: translateY(-60%); }
  .web-photoshop .example, .web-illustrator .example {
    height: 240px;
    top: 10%; }
  .web .htmlLogo, .web .cssLogo, .web .jsLogo, .web .blogLogo, .web .photoshopLogo, .web .illustratorLogo {
    left: 40px;
    bottom: -30px;
    width: 240px;
    height: 200px; }
  .web .photoshopLogo, .web .illustratorLogo {
    bottom: -4px; }
  .skills ul {
    margin-left: 40px;
    line-height: 32px;
    font-size: 22px; }
  .portfolio-bl {
    width: 33.33333%; }
  .portfolio-link {
    margin-right: -1px; }
  .showPopUp {
    padding-top: 60px; }
  .workShow {
    width: 90%;
    max-width: 900px;
    position: relative;
    padding: 40px 20px 40px 20px; }
    .workShow .leftShow {
      width: 40%;
      float: left;
      box-sizing: border-box; }
    .workShow-title {
      margin-top: 0; }
    .workShow-image {
      display: block;
      width: 100%;
      border: 1px solid darkgray; }
    .workShow-text {
      padding-bottom: 60px; }
    .workShow .rightShow {
      width: 60%;
      float: right;
      padding-left: 30px;
      box-sizing: border-box;
      position: relative; }
    .workShow .btn {
      max-width: 300px;
      margin: 20px;
      position: absolute;
      bottom: 0;
      right: 0; } }

@media (min-width: 992px) {
  /* all slides general  */
  /* portfolio */
  /* */
  .container {
    max-width: 992px;
    margin-left: auto;
    margin-right: auto; }
  .web h1, .skills h1, .about h1 {
    font-size: 62px;
    padding: 0 100px;
    margin-top: 10px; }
  .portfolio-link {
    margin-right: auto; }
  .workShow {
    width: 90%;
    max-width: 900px;
    position: relative;
    padding: 40px 20px 100px 20px; }
    .workShow .leftShow {
      width: 40%;
      float: left;
      box-sizing: border-box; }
    .workShow-title {
      font-size: 26px; }
    .workShow-image {
      display: block;
      width: 100%;
      border: 1px solid darkgray; }
    .workShow-text {
      line-height: 24px;
      font-size: 18px; } }

@media (min-width: 1200px) {
  .container {
    max-width: 992px;
    margin-left: auto;
    margin-right: auto; }
  .container.portGrid {
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto; }
  .web h1, .skills h1, .about h1 {
    margin-top: 40px;
    margin-bottom: 60px; } }

/* animations */
@-webkit-keyframes bounceIn {
  0%, 20%, 40%, 60%, 80%, 100% {
    -webkit-transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
            transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }

  0% {
    opacity: 0;
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
            transform: scale3d(0.3, 0.3, 0.3); }

  20% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1);
            transform: scale3d(1.1, 1.1, 1.1); }

  40% {
    -webkit-transform: scale3d(0.9, 0.9, 0.9);
            transform: scale3d(0.9, 0.9, 0.9); }

  60% {
    opacity: 1;
    -webkit-transform: scale3d(1.03, 1.03, 1.03);
            transform: scale3d(1.03, 1.03, 1.03); }

  80% {
    -webkit-transform: scale3d(0.97, 0.97, 0.97);
            transform: scale3d(0.97, 0.97, 0.97); }

  100% {
    opacity: 1;
    -webkit-transform: scale3d(1, 1, 1);
            transform: scale3d(1, 1, 1); } }
@keyframes bounceIn {
  0%, 20%, 40%, 60%, 80%, 100% {
    -webkit-transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
            transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }

  0% {
    opacity: 0;
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
            transform: scale3d(0.3, 0.3, 0.3); }

  20% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1);
            transform: scale3d(1.1, 1.1, 1.1); }

  40% {
    -webkit-transform: scale3d(0.9, 0.9, 0.9);
            transform: scale3d(0.9, 0.9, 0.9); }

  60% {
    opacity: 1;
    -webkit-transform: scale3d(1.03, 1.03, 1.03);
            transform: scale3d(1.03, 1.03, 1.03); }

  80% {
    -webkit-transform: scale3d(0.97, 0.97, 0.97);
            transform: scale3d(0.97, 0.97, 0.97); }

  100% {
    opacity: 1;
    -webkit-transform: scale3d(1, 1, 1);
            transform: scale3d(1, 1, 1); } }

.bounceIn {
  -webkit-animation-name: bounceIn;
          animation-name: bounceIn;
  -webkit-animation-duration: 0.75s;
          animation-duration: 0.75s; }

@-webkit-keyframes bounceInDown {
  0%, 60%, 75%, 90%, 100% {
    -webkit-transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
            transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }

  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, -3000px, 0);
            transform: translate3d(0, -3000px, 0); }

  60% {
    opacity: 1;
    -webkit-transform: translate3d(0, 25px, 0);
            transform: translate3d(0, 25px, 0); }

  75% {
    -webkit-transform: translate3d(0, -10px, 0);
            transform: translate3d(0, -10px, 0); }

  90% {
    -webkit-transform: translate3d(0, 5px, 0);
            transform: translate3d(0, 5px, 0); }

  100% {
    -webkit-transform: none;
            transform: none; } }

@keyframes bounceInDown {
  0%, 60%, 75%, 90%, 100% {
    -webkit-transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
            transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }

  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, -3000px, 0);
            transform: translate3d(0, -3000px, 0); }

  60% {
    opacity: 1;
    -webkit-transform: translate3d(0, 25px, 0);
            transform: translate3d(0, 25px, 0); }

  75% {
    -webkit-transform: translate3d(0, -10px, 0);
            transform: translate3d(0, -10px, 0); }

  90% {
    -webkit-transform: translate3d(0, 5px, 0);
            transform: translate3d(0, 5px, 0); }

  100% {
    -webkit-transform: none;
            transform: none; } }

.bounceInDown {
  -webkit-animation-name: bounceInDown;
          animation-name: bounceInDown; }
/*# sourceMappingURL=data:application/json;base64, */